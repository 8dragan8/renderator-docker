version: "3"

services:
  php-fpm:
    build:
      context: ./php
    container_name: "php-app1"
    environment:
      APP_ENV: ${APP_ENV}

      # DB_CONNECTION: ${DB_CONNECTION}
      # DB_HOST: ${DB_HOST}
      # DB_PORT: ${DB_PORT}
      # DB_DATABASE: ${DB_DATABASE}
      # DB_USERNAME: ${DB_USERNAME}
      # DB_PASSWORD: ${DB_PASSWORD}
      # XDEBUG_CONFIG: remote_host=host.docker.internal remote_port=9000 remote_enable=1
    env_file: .env
    volumes:
      - ${USER_DASHBOARD_LOCAL_DIR}:${USER_DASHBOARD_REMOTE_DIR}
      - ${SF_LOCAL_DIR}:${SF_REMOTE_DIR}
      - ${TOURS_LOCAL_DIR}:${TOURS_REMOTE_DIR}
      - ${TWO_D_LOCAL_DIR}:${TWO_D_REMOTE_DIR}
      - ./php/php.ini:/usr/local/etc/php/conf.d/99.overrides.php.ini
    restart: unless-stopped
    networks:
      - app-network

  node-js:
    build:
      context: ${SF_NUXT_LOCAL_DIR}
    container_name: "node-js"
    volumes:
      - ${SF_NUXT_LOCAL_DIR}:${SF_NUXT_REMOTE_DIR}
      # exclude
      - ${SF_NUXT_REMOTE_DIR}/.nuxt
      - ${SF_NUXT_REMOTE_DIR}/node_modules
    working_dir: ${SF_NUXT_REMOTE_DIR}
    ports:
      - "9001:3000"
    command: sh -c "npm run dev"
    environment:
      HOST: "0.0.0.0"
      APP_API_URL: "http://localhost:90"
      API_URL: "http://localhost:90"
      SSR_API_URL: "http://nginx-app1"
      DATA_URL: "http://localhost:90"
      SSR_DATA_URL: "http://nginx-app1"
      # API_SF_URL: "http://192.168.0.102:81/api"
      API_VT_URL: "http://localhost:81/api"
      # SSR_API_SF_URL: "http://192.168.0.102:81/api"
      API_SF_URL: "http://nginx-app1/php/api"
      # API_VT_URL: "https://api.renderator.com/api"
      SSR_API_SF_URL: "http://nginx-app1/php/api"

      API_DB_DATABASE: "new_projects"
      API_DB_USER: "new_projects_user"
      API_DB_PASSWORD: "UboLEsbI819wzrxo"
      API_DB_HOST: "db"

      GOOGLE_SECRET: "6LfkT9AZAAAAAMFD4WXdy5Mo05FGBq8IYGihoGa5"
      GOOGLE_SITE: "6LfkT9AZAAAAAB_CdVACMBP0pd61idodn7g9H0eq"

    restart: unless-stopped
    networks:
      - app-network

  nginx:
    build:
      context: ./nginx
    container_name: "nginx-app1"
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites/:/etc/nginx/sites-available
      - ./nginx/conf.d/:/etc/nginx/conf.d
      - ${TOURS_LOCAL_DIR}:${TOURS_REMOTE_DIR}
      - ${USER_DASHBOARD_LOCAL_DIR}:${USER_DASHBOARD_REMOTE_DIR}
      - ${SF_LOCAL_DIR}:${SF_REMOTE_DIR}
      - ${TWO_D_LOCAL_DIR}:${TWO_D_REMOTE_DIR}
      - ${SF_NUXT_LOCAL_DIR}:${SF_NUXT_REMOTE_DIR}
      # exclude
      - ${SF_NUXT_REMOTE_DIR}/.nuxt
      - ${SF_NUXT_REMOTE_DIR}/node_modules
    depends_on:
      - php-fpm
      - node-js

    ports:
      - "90:80"
      - "91:81"
      - "92:82"
      - "93:83"
      - "9443:443"
    networks:
      - app-network
  db:
    image: mysql
    container_name: "db-app1"
    environment:
      MYSQL_DATABASE: "render_appdb"
      MYSQL_USER: "render_appdbu"
      MYSQL_PASSWORD: "8BDGIegPW1"
      MYSQL_ROOT_PASSWORD: "docker"
    restart: unless-stopped
    volumes:
      - app-db-volume:/var/lib/mysql
    ports:
      - 9306:3306
    depends_on:
      - php-fpm
    networks:
      - app-network

  myadmin:
    image: phpmyadmin:latest
    container_name: "myadmin-app1"
    volumes:
      - ./myadmin/themes/darkwolf:/var/www/html/themes/darkwolf
    ports:
      - "9080:80"
    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: "db"
      PMA_USER: "root"
      PMA_PASSWORD: "docker"
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - app-network

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog-app1
    logging:
      driver: "none" # disable saving logs
    ports:
      - 1026:1025 # smtp server
      - 8026:8025 # web ui
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
volumes:
  app-db-volume:
