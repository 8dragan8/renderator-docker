version: "3"

services:
  user-dashboard-api:
    build:
      context: ./php
    container_name: "user-dashboard-api"
    environment:
      HOST: "0.0.0.0"
      APP_ENV: ${APP_ENV}
      APP_NAME: "renderator"
      APP_KEY: "base64:8ZcDDNEzcJ7Qh59SmC2utLIKBmzql5Wfk8ckTtNmh2Y="

      APP_DEBUG: "true" # true or false
      APP_URL: "${HOST_URL}:94"
      DB_CONNECTION: "mysql"
      DB_HOST: "db-renderator"
      DB_PORT: "3306"
      DB_DATABASE: "render_db_v3"
      DB_USERNAME: "root"
      DB_PASSWORD: "docker"

      SESSION_LIFETIME: "120"
      BROADCAST_DRIVER: "log"
      CACHE_DRIVER: "file"
      QUEUE_CONNECTION: "sync"
      SESSION_DRIVER: "file"
      MEMCACHED_HOST: "127.0.0.1"
      REDIS_HOST: "127.0.0.1"
      REDIS_PORT: "6379"
      L5_SWAGGER_CONST_HOST: "${HOST_URL}:94"
      L5_FORMAT_TO_USE_FOR_DOCS: "yaml"
      VARIFICATION_URL: "${HOST_URL}:94/user/verify?c="
      suites_flow_base_url: "${HOST_URL}:90"

      MAIL_DRIVER: "smtp"
      MAIL_HOST: "mailhog-renderator"
      MAIL_PORT: "1025"
      MAIL_USERNAME: "null"
      MAIL_PASSWORD: "null"
      MAIL_ENCRYPTION: "null"
    env_file: .env
    extra_hosts:
      - "dashboard-api.renderator2.com:host-gateway"
    volumes:
      - ${USER_DASHBOARD_LOCAL_DIR}:${USER_DASHBOARD_REMOTE_DIR}
      # - ${SF_LOCAL_DIR}:${SF_REMOTE_DIR}
      # - ${SF_DATA_LOCAL_DIR}:${SF_DATA_REMOTE_DIR}
      # - ${TOURS_LOCAL_DIR}:${TOURS_REMOTE_DIR}
      # - ${TWO_D_LOCAL_DIR}:${TWO_D_REMOTE_DIR}
      - ${SF_DATA_LOCAL_DIR}:${DASHBOARD_API_DATA_REMOTE_DIR}
      - ${DASHBOARD_API_LOCAL_DIR}:${DASHBOARD_API_REMOTE_DIR}
      - ./php/php.ini:/usr/local/etc/php/conf.d/99.overrides.php.ini
      # exclude
      # - ${DASHBOARD_API_DATA_LOCAL_DIR}
      # - ${SF_LOCAL_DIR}/data
    restart: unless-stopped
    networks:
      - renderator-net

  sf-nuxt:
    build:
      context: ${SF_NUXT_LOCAL_DIR}
    container_name: "sf-nuxt"
    volumes:
      - ${SF_NUXT_LOCAL_DIR}:${SF_NUXT_REMOTE_DIR}
      # exclude
      - ${SF_NUXT_REMOTE_DIR}/.nuxt
      - ${SF_NUXT_REMOTE_DIR}/node_modules
    working_dir: ${SF_NUXT_REMOTE_DIR}
    extra_hosts:
      - "dashboard-api.renderator2.com:host-gateway"

    ports:
      - "9001:3000"
      - "9229:9229"
      - "9230:9230"
    environment:

      HOST: "0.0.0.0"

      API_URL: "${HOST_URL}:94"
      SSR_API_URL: "http://dashboard-api.renderator2.com:94"

      DATA_URL: "${HOST_URL}:94"
      SSR_DATA_URL: "http://dashboard-api.renderator2.com:94"

      API_URL_GET_BUILDING_DATA: /api/v2/get_building_by_token
      API_URL_GET_PROPERTIES_DATA: /api/v2/get_building_data

      API_DB_DATABASE: "new_projects"
      API_DB_USER: "new_projects_user"
      API_DB_PASSWORD: "UboLEsbI819wzrxo"
      API_DB_HOST: "db-renderator"

      MAP_BOX_API_KEY: ${MAP_BOX_API_KEY}
      GOOGLE_SECRET: "6LfkT9AZAAAAAMFD4WXdy5Mo05FGBq8IYGihoGa5"
      GOOGLE_SITE: "6LfkT9AZAAAAAB_CdVACMBP0pd61idodn7g9H0eq"

    restart: unless-stopped
    networks:
      - renderator-net
  dashboard:
    image: mcr.microsoft.com/dotnet/sdk:5.0
    container_name: "dashboard"
    command: "dotnet run --project RWA.Web"
    volumes:
      - ${USER_DASHBOARD_LOCAL_DIR}:${USER_DASHBOARD_REMOTE_DIR}
    working_dir: ${USER_DASHBOARD_REMOTE_DIR}
    extra_hosts:
      - "dashboard-api.renderator.com:host-gateway"
    environment:
      HOST: "0.0.0.0"

    restart: unless-stopped
    networks:
      - renderator-net

  nginx-renderator:
    build:
      context: ./nginx
    container_name: "nginx-renderator"
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites/:/etc/nginx/sites-available
      - ./nginx/conf.d/:/etc/nginx/conf.d
      # - ${TOURS_LOCAL_DIR}:${TOURS_REMOTE_DIR}
      - ${USER_DASHBOARD_LOCAL_DIR}:${USER_DASHBOARD_REMOTE_DIR}
      - ${SF_DATA_LOCAL_DIR}:${DASHBOARD_API_DATA_REMOTE_DIR}

      # - ${SF_LOCAL_DIR}:${SF_REMOTE_DIR}
      # - ${SF_DATA_LOCAL_DIR}:${SF_DATA_REMOTE_DIR}
      # - ${TWO_D_LOCAL_DIR}:${TWO_D_REMOTE_DIR}
      - ${SF_NUXT_LOCAL_DIR}:${SF_NUXT_REMOTE_DIR}
      - ${DASHBOARD_API_LOCAL_DIR}:${DASHBOARD_API_REMOTE_DIR}

      # exclude
      - ${SF_NUXT_REMOTE_DIR}/.nuxt
      - ${SF_NUXT_REMOTE_DIR}/node_modules
      # - ${SF_LOCAL_DIR}/data
    depends_on:
      - user-dashboard-api
      - sf-nuxt
      - dashboard

    ports:
      - "90:80"
      - "91:81"
      - "92:82"
      - "93:83"
      - "94:84"
      - "443:443"
    networks:
      - renderator-net
  db-renderator:
    image: mysql
    container_name: "db-renderator"
    environment:
      MYSQL_DATABASE: "render_appdb"
      MYSQL_USER: "render_appdbu"
      MYSQL_PASSWORD: "8BDGIegPW1"
      MYSQL_ROOT_PASSWORD: "docker"
    restart: unless-stopped
    volumes:
      - app-db-volume:/var/lib/mysql
    ports:
      - 9306:3306
    depends_on:
      - user-dashboard-api
    networks:
      - renderator-net

  myadmin-renderator:
    image: phpmyadmin:latest
    container_name: "myadmin-renderator"
    volumes:
      - ./myadmin/themes/darkwolf:/var/www/html/themes/darkwolf
    ports:
      - "9080:80"
    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: "db-renderator"
      PMA_USER: "root"
      PMA_PASSWORD: "docker"
    restart: unless-stopped
    depends_on:
      - db-renderator
    networks:
      - renderator-net

  mailhog-renderator:
    image: mailhog/mailhog
    container_name: mailhog-renderator
    logging:
      driver: "none" # disable saving logs
    ports:
      - 1927:1025 # smtp server
      - 8027:8025 # web ui
    restart: unless-stopped
    networks:
      - renderator-net

networks:
  renderator-net:
    driver: bridge
volumes:
  app-db-volume:
